// (C) 2006, Michael Gruhn.

// NO WARRANTY IS GRANTED. THIS PLUG-IN IS PROVIDED ON AN "AS IS" BASIS, WITHOUT
// WARRANTY OF ANY KIND. NO LIABILITY IS GRANTED, INCLUDING, BUT NOT LIMITED TO,
// ANY DIRECT OR INDIRECT,  SPECIAL,  INCIDENTAL OR CONSEQUENTIAL DAMAGE ARISING
// OUT OF  THE  USE  OR INABILITY  TO  USE  THIS PLUG-IN,  COMPUTER FAILTURE  OF
// MALFUNCTION INCLUDED.  THE USE OF THE SOURCE CODE,  EITHER  PARTIALLY  OR  IN
// TOTAL, IS ONLY GRANTED,  IF USED IN THE SENSE OF THE AUTHOR'S INTENTION,  AND
// USED WITH ACKNOWLEDGEMENT OF THE AUTHOR. FURTHERMORE IS THIS PLUG-IN A  THIRD
// PARTY CONTRIBUTION,  EVEN IF INCLUDED IN REAPER(TM),  COCKOS INCORPORATED  OR
// ITS AFFILIATES HAVE NOTHING TO DO WITH IT.  LAST BUT NOT LEAST, BY USING THIS
// PLUG-IN YOU RELINQUISH YOUR CLAIM TO SUE IT'S AUTHOR, AS WELL AS THE CLAIM TO
// ENTRUST SOMEBODY ELSE WITH DOING SO.

desc:Ping Pong Pan
//tags: modulation stereo
//author: LOSER

filename:0,p1.png
filename:1,sk1.png

slider1:.25<0,20,.1>-Frequency (Hz)
slider2:75<0,100,1>-Width (%)

in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

@slider
x=(2*$pi*slider1)/srate;
width = slider2/100;

@sample
pan = min( max( (sin(t)) * width, -1 ) , 1 );

spl0 *= (pan > 0 ? 1-pan:1);
spl1 *= (pan < 0 ? 1+pan:1);

t=t+x;

@gfx 300 220
  gfx_setfont(1,"Arial ",17,'a');
  mouse_cap > 0 ? (
    mouseon == 0 ? (
      mouseclick = 1;
      mouse_cap == 2 ? val=10.0 : val = 0.1;
      
      (mouse_x>=20&&mouse_x<=117&&mouse_y>=70&&mouse_y<=168) ? (mouseon=1;mouseclick=1;);
    
          
      //Freq
       );
        mouseon == 1 ? (
          mouse_y < saveY ? slider1 = max(0,slider1-val);
          mouse_y > saveY ? slider1 = min(20,slider1+val);
          mouse_cap == 2 ? slider1 = 0.2;
        );
        
        mouse_cap > 0 ? (
          mouseon == 0 ? (
            mouseclick = 1;
            mouse_cap == 2 ? val=1.0 : val = 1;
            );
            
      (mouse_x>=133&&mouse_x<=233&&mouse_y>=70&&mouse_y<=168) ? (mouseon=2;mouseclick=2;);
            
            );
      
      //Widht
       mouseon == 2 ? (
         mouse_y < saveY ? slider2 = max(0,slider2-val);
         mouse_y > saveY ? slider2 = min(100,slider2+val);
         mouse_cap == 2 ? slider2 = 75;

    );
    
    x=(2*$pi*slider1)/srate;
    width = slider2/100;
    
    
    
      saveX=mouse_X;
      saveY=mouse_y;
      
    
    ): (done=0;mouseon=0;);



  rotation_x_offset = 0; // 
  rotation_y_offset = 0;
  coordinatelist=30000; // use memory slots 30000-30009

//set up and draw the background graphics
  coordinatelist[0]=0;
  coordinatelist[1]=0;
  coordinatelist[2]=300;
  coordinatelist[3]=150;
  coordinatelist[4]=0;
  coordinatelist[5]=0;
  coordinatelist[6]=440;
  coordinatelist[7]=220;
  coordinatelist[8]=rotation_x_offset;
  coordinatelist[9]=rotation_y_offset;
  
  gfx_blitext(0,coordinatelist,0);
  
  coordinatelist[0]=-3;
  coordinatelist[1]=-3;
  coordinatelist[2]=131;
  coordinatelist[3]=131;
  coordinatelist[4]=18;
  coordinatelist[5]=65;
  coordinatelist[6]=102;
  coordinatelist[7]=102;
  coordinatelist[8]=rotation_x_offset;
  coordinatelist[9]=rotation_y_offset;
  
  gfx_blitext(1,coordinatelist,6.3+slider1*0.24);
  
  coordinatelist[0]=-3;
  coordinatelist[1]=-3;
  coordinatelist[2]=131;
  coordinatelist[3]=131;
  coordinatelist[4]=132;
  coordinatelist[5]=65;
  coordinatelist[6]=102;
  coordinatelist[7]=102;
  coordinatelist[8]=rotation_x_offset;
  coordinatelist[9]=rotation_y_offset;
  
  gfx_blitext(1,coordinatelist,6.3+slider2*1.2 /25);
  
  //Letreiro
  gfx_r = gfx_g = gfx_b = 1;
  //reverberator
  gfx_a = 0.9;
  gfx_x = 35;
  gfx_y = 55;
  gfx_drawchar($'F');
  gfx_drawchar($'r');
  gfx_drawchar($'e');
  gfx_drawchar($'q');
  gfx_drawchar($'u');
  gfx_drawchar($'e');
  gfx_drawchar($'n');
  gfx_drawchar($'c');
  gfx_drawchar($'y');
  
  gfx_x = 165;

  gfx_drawchar($'W');
  gfx_drawchar($'i');
  gfx_drawchar($'d');
  gfx_drawchar($'t');
  gfx_drawchar($'h');

  gfx_x = 298;
  gfx_y = 8;
  gfx_drawchar($'G');
  gfx_drawchar($'i');
  gfx_drawchar($'l');
  gfx_drawchar($' ');
  gfx_drawchar($'F');
  gfx_drawchar($'e');
  gfx_drawchar($'r');
  gfx_drawchar($'n');
  gfx_drawchar($'a');
  gfx_drawchar($'n');
  gfx_drawchar($'d');
  gfx_drawchar($'e');
  gfx_drawchar($'s');
  gfx_drawchar($' ');
  gfx_drawchar($'V');
  gfx_drawchar($'1');
  gfx_drawchar($'.');
  gfx_drawchar($'1');
  
  gfx_x = 10;
  
  gfx_drawchar($'L');
  gfx_drawchar($'O');
  gfx_drawchar($'S');
  gfx_drawchar($'E');
  gfx_drawchar($'R');

    
  //display freq
    gfx_x=46;gfx_y=178;
    gfx_drawnumber(slider1,1);
    gfx_drawchar($'H');
    gfx_drawchar($'z');
    
    gfx_x=174;
    gfx_drawnumber(slider2,0);
    gfx_drawchar($'%');
    
    gfx_r =0;
     gfx_g =0; 
     gfx_b = 1;
    gfx_a = 1;

    
    gfx_circle(336+slider2/5.8,69,4,2;
    
    );
    gfx_circle(323-slider2/5.8,70,4,2;
    );
    
    gfx_r = gfx_g =  gfx_b = 1;
    gfx_a = 1;
    
    gfx_circle(335+slider2/5.7,70,1,120,0;

  gfx_circle(322-slider2/5.7,71,1,120,0;
    );
    );
    
  
  
  
  gfx_x = 79; gfx_y = 2;
  gfx_r = 0.8; gfx_g = 0.4; gfx_b = 0.4; gfx_a = 1;
  gfx_setfont(1,"Arial Black",34,'');
  gfx_drawstr("Ping Pong Pan"); 
