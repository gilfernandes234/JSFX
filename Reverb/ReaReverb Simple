
desc:ReaReverb Simple
version:1.0


filename:0,r.png
filename:1,r1.png

//Reverb Effect

slider20:0<-50,0>-Dry (Clean) 
slider21:-14<-50,0>-Wet (Reverb Effect)
slider22:50<0,100>-Damping



@sample
   
  Dry = exp(slider20/8.65617);
  Wet = exp(slider21/8.65617);
  g = 1-slider22/100;
  
    a0 = 0;
      a0_len = (srate*35/1000)|0;
      a0_g = 0.3;
      
      a1 = a0+a0_len+1;
      a1_len = (srate*22/1000)|0;
      a1_g = 0.4;
      
      a2 = a1+a1_len+1;
      a2_len = (srate*8.3/1000)|0;
      a2_g = 0.6;
      
      a3 = a2+a2_len+1;
      a3_len = (srate*66/1000)|0;
      a3_g = 0.1;
      
      a4 = a3+a3_len+1;
      a4_len = (srate*30/1000)|0;
      a4_g = 0.4;
      
      rndcoef = 50;
      
      a0r = a4+a4_len+1;
      a0r_len = ((srate*35/1000)|0)+rndcoef;
      
      a1r = a0r+a0r_len+1;
      a1r_len = ((srate*22/1000)|0)-rndcoef;
      
      a2r = a1r+a1r_len+1;
      a2r_len = ((srate*8.3/1000)|0)+rndcoef;
      
      a3r = a2r+a2r_len+1;
      a3r_len = ((srate*66/1000)|0)-rndcoef;
      
      a4r = a3r+a3r_len+1;
      a4r_len = ((srate*30/1000)|0)+rndcoef;
      
      c = exp(-2*3.14*4200/srate);
    
    //L+R
    in = spl0 + spl1 + tmp*g;
    
 
    a0_in = in;
    a0_out = -a0_in*a0_g + a2_out;
    a1_in = a0_in + a0_out*a0_g;
    
   
      a1_out = -a1_in*a1_g + a1[a1_pos];
      a1[a1_pos] = a1_in + a1_out*a1_g;
      (a1_pos+=1) >= a1_len ? a1_pos = 0;
    
      a2_in = a1_out;
      a2_out = -a2_in*a2_g + a2[a2_pos];
      a2[a2_pos] = a2_in + a2_out*a2_g;
      (a2_pos+=1) >= a2_len ? a2_pos = 0;

      a0[a0_pos] = a2_out;
      (a0_pos+=1) >= a0_len ? a0_pos = 0;
      a2_out = a0[a0_pos];

    a3_in = a0_out;
    a3_out = -a3_in*a3_g + a4_out;
    a4_in = a3_in + a3_out*a3_g;

      a4_out = -a4_in*a4_g + a4[a4_pos];
      a4[a4_pos] = a4_in + a4_out*a4_g;
      (a4_pos+=1) >= a4_len ? a4_pos = 0;
    
    
      a3[a3_pos] = a4_out;
      (a3_pos+=1) >= a3_len ? a3_pos = 0;
      a4_out = a3[a3_pos];
  
    
    tmp = a3_out;
    tmp = (t = tmp + c*(t-tmp));
    
    out = a0_out*0.5 + a3_out*0.5;
    
    
    spl0 = spl0*dry + out*wet;
    spl1 = spl1*dry + out*wet;
    
    //Todo código acima NÃO SOU POSSUIDOR;
     //todo código abaixo foi feito por Gil Fernandes;
    
@gfx 5 160
    
    
    mouse_cap > 0 ? (
      mouseon == 0 ? (
        mouseclick = 1;
        mouse_cap == 2 ? val=1.0 : val = 1.3;
        //Dry
        (mouse_x>=43&&mouse_x<=103&&mouse_y>=48&&mouse_y<=117) ? (mouseon=20;mouseclick=20;);
        //Wet 
        (mouse_x>=143&&mouse_x<=203&&mouse_y>=48&&mouse_y<=117) ? (mouseon=21;mouseclick=21;);
        //Damping
        (mouse_x>=240&&mouse_x<=300&&mouse_y>=48&&mouse_y<=117) ? (mouseon=22;mouseclick=22;); 

            
        //Dry
         );
          mouseon == 20 ? (
            mouse_y < saveY ? slider20 = max(-50,slider20-val);
            mouse_y > saveY ? slider20 = min(0,slider20+val);
            mouse_cap == 2 ? slider20 = 0;
          );
        
        //Wet
         mouseon == 21 ? (
           mouse_y < saveY ? slider21 = max(-50,slider21-val);
           mouse_y > saveY ? slider21 = min(0,slider21+val);
           mouse_cap == 2 ? slider21 = -14;
         );
         
         
        //Damping
         mouseon == 22 ? (
          mouse_y < saveY ? slider22 = max(0,slider22-val);
          mouse_y > saveY ? slider22 = min(100,slider22+val);
          mouse_cap == 2 ? slider22 = 50;
          
    );
    
      saveX=mouse_X;
      saveY=mouse_y;
      
    
    ): (done=0;mouseon=0;);
//Fim do código mouse
//inicio de bordas displaye e imagens
    
    gfx_a=1;
    gfx_x=gfx_y=0;
    
       rotation_x_offset = 1; // only used if rotation is set, represents offset from center of image
       rotation_y_offset = 1;
       
    coordinatelist=1000000; // use memory slots 30000-30009
    
    
     //posição da imagem de fundo
      coordinatelist[0]=0;
      coordinatelist[1]=0;
      coordinatelist[2]=300;
      coordinatelist[3]=140;
      coordinatelist[4]=0;
      coordinatelist[5]=0;
      coordinatelist[6]=350;
      coordinatelist[7]=160;
      coordinatelist[8]=0; //represents offset from center of image
      coordinatelist[9]=0; //represents offset from center of image
      gfx_blitext(0,coordinatelist,0);
      
        //posição da imagem do knob Dry Clean
         coordinatelist[0]=-3;
         coordinatelist[1]=-3;
         coordinatelist[2]=131;
         coordinatelist[3]=131;
         coordinatelist[4]=43;
         coordinatelist[5]=49;
         coordinatelist[6]=68;
         coordinatelist[7]=68;
         coordinatelist[8]=0; 
         coordinatelist[9]=0; 
      gfx_blitext(1,coordinatelist,6.2-slider20/31*3.2);
        //posição da imagem do knob Wet (Reverb Effect)
         coordinatelist[4]=139;

         //posição da imagem do knob Damping
      gfx_blitext(1,coordinatelist,6.2-slider21/31*3.2);    
         coordinatelist[4]=237;

      gfx_blitext(1,coordinatelist,6.2+slider22/31*1.6);
    
    //Letreiro
    gfx_r = gfx_g = gfx_b = 0;
    //reverberator
    gfx_a = 0.9;
    gfx_x = 136;
    gfx_y = 29;
    gfx_drawchar($'P');
    gfx_drawchar($'a');
    gfx_drawchar($'r');
    gfx_drawchar($'a');
    gfx_drawchar($'m');
    gfx_drawchar($'e');
    gfx_drawchar($'t');
    gfx_drawchar($'e');
    gfx_drawchar($'r');
    gfx_drawchar($'s');

    gfx_r = gfx_g = gfx_b = 1;
    //Dry
    gfx_a = 0.9;
    gfx_x = 66;
    gfx_y = 118;
    gfx_drawchar($'D');
    gfx_drawchar($'r');
    gfx_drawchar($'y');
    //WET
    gfx_a = 0.9;
    gfx_x = 163;
    gfx_y = 118;
    gfx_drawchar($'W');
    gfx_drawchar($'e');
    gfx_drawchar($'t');

   //Damping
    gfx_a = 0.9;
    gfx_x = 245;
    gfx_y = 118;
    gfx_drawchar($'D');
    gfx_drawchar($'a');
    gfx_drawchar($'m');
    gfx_drawchar($'p');
    gfx_drawchar($'i');
    gfx_drawchar($'n');
    gfx_drawchar($'g');
    
    gfx_a = 0.9;
    gfx_x = 126;
    gfx_y = 8;
    gfx_drawchar($'S');
    gfx_drawchar($'i');
    gfx_drawchar($'m');
    gfx_drawchar($'p');
    gfx_drawchar($'l');
    gfx_drawchar($'e');
    gfx_drawchar($' ');
    gfx_drawchar($'R');
    gfx_drawchar($'e');
    gfx_drawchar($'v');
    gfx_drawchar($'e');
    gfx_drawchar($'r');
    gfx_drawchar($'b');

    
    gfx_a = 0.9;
    gfx_x = 290;
    gfx_y = 8;
    gfx_drawchar($'V');
    gfx_drawchar($'1');
    gfx_drawchar($'.');
    gfx_drawchar($'1');
    
    gfx_a = 0.9;
    gfx_x = 122;
    gfx_y = 142;
    gfx_drawchar($'G');
    gfx_drawchar($'i');
    gfx_drawchar($'l');
    gfx_drawchar($' ');
    gfx_drawchar($'F');
    gfx_drawchar($'e');
    gfx_drawchar($'r');
    gfx_drawchar($'n');
    gfx_drawchar($'a');
    gfx_drawchar($'n');
    gfx_drawchar($'d');
    gfx_drawchar($'e');
    gfx_drawchar($'s');
    
            
 //Borda Display
    gfx_r = 0;
     gfx_g = 0; 
     gfx_b = 1;
    gfx_a = 0;//Valor 0 por que esta desativado!!!
    
    // Dry
     gfx_x = 62;
      gfx_y = 43;
       gfx_rectto(97,54);
    
    //wet

     gfx_x = 195;
      gfx_y = 43;
       gfx_rectto(157,54);
    
    //Damping

     gfx_x = 256;
      gfx_y = 43;
       gfx_rectto(292,54);
    
//display
      gfx_r=0.7;gfx_g=1.0;gfx_b=0.8;
      gfx_a=1.0;
      
    //display Dry
      gfx_x=65;gfx_y=45;
      gfx_drawnumber(slider20,0);
      
      //display Wet
        gfx_x=163;gfx_y=45;
        gfx_drawnumber(slider21,0);
        
        //display Damping
          gfx_x=260;gfx_y=45;
          gfx_drawnumber(slider22,0);
    

    gfx_r = 0.6;
     gfx_g = 0.6; 
     gfx_b = .6;
    gfx_a = 0.7;
    
    gfx_arc(271,83,24,10+slider22/31*1.6, 10);
    gfx_arc(271,83,25,10+slider22/31*1.6, 10);
    gfx_arc(271,83,26,10+slider22/31*1.6, 10);
    gfx_arc(271,83,27,10+slider22/31*1.6, 10);
    gfx_arc(271,83,28,10+slider22/31*1.6, 10);
    gfx_arc(271,83,24,10+slider22/31*1.6, 10);
    gfx_arc(271,83,25,10+slider22/31*1.6, 10);
    gfx_arc(271,83,26,10+slider22/31*1.6, 10);
    gfx_arc(271,83,27,10+slider22/31*1.6, 10);
    gfx_arc(271,83,28,10+slider22/31*1.6, 10);
    
    
    gfx_arc(173,83,24,10-slider21/31*3.2, 10);
    gfx_arc(173,83,25,10-slider21/31*3.2, 10);
    gfx_arc(173,83,26,10-slider21/31*3.2, 10);
    gfx_arc(173,83,27,10-slider21/31*3.2, 10);
    gfx_arc(173,83,28,10-slider21/31*3.2, 10);
    gfx_arc(173,83,24,10-slider21/31*3.2, 10);
    gfx_arc(173,83,25,10-slider21/31*3.2, 10);
    gfx_arc(173,83,26,10-slider21/31*3.2, 10);
    gfx_arc(173,83,27,10-slider21/31*3.2, 10);
    gfx_arc(173,83,28,10-slider21/31*3.2, 10);
    
    
    
    gfx_arc(77,83,24,10-slider20/31*3.2, 10);
    gfx_arc(77,83,25,10-slider20/31*3.2, 10);
    gfx_arc(77,83,26,10-slider20/31*3.2, 10);
    gfx_arc(77,83,27,10-slider20/31*3.2, 10);
    gfx_arc(77,83,28,10-slider20/31*3.2, 10);
    
    gfx_arc(77,83,24,10-slider20/31*3.2, 10);
    gfx_arc(77,83,25,10-slider20/31*3.2, 10);
    gfx_arc(77,83,26,10-slider20/31*3.2, 10);
    gfx_arc(77,83,27,10-slider20/31*3.2, 10);
    gfx_arc(77,83,28,10-slider20/31*3.2, 10);
    
    


