desc:UP! Snare (Gil Fernandes)


filename:0,bs1.png
filename:1,s1.png
slider1:-7<-12,1,.1>-Amount TH(dB)
slider2:30<30,50,.1>-R
slider3:180<150,200,1>-High Pass
slider4:180<180,260,1>-Frequency (Hz)
slider5:8<1,12,0.1>-Boost Freq (dB)
slider6:0.20<0.07,0.40,0.0001>-Largura
slider7:1<0,25,0.05>-Gain(dB)

in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output
options:no_meter
@init

cAmpDB_ = 8.65617025;

@slider
  freq1 = slider3;
  slider3 == 0 ? hpf = 0 : hpf = 1;

  a1 = 1;
  s1 = 1;
  q1 = 1 / (sqrt((a1 + 1/a1)*(1/s1 - 1) + 2));
  w01 = 2 * $pi * freq1/srate;
  cosw01 = cos(w01);
  sinw01 = sin(w01);
  alpha1 = sinw01 / (2 * q1);

  b01 = (1 + cosw01)/2;
  b11 = -(1 + cosw01);
  b21 = (1 + cosw01)/2;
  a01 = 1 + alpha1;
  a11 = -2 * cosw01;
  a21 = 1 - alpha1;
  b01 /= a01;
  b11 /= a01;
  b21 /= a01;
  a11 /= a01;
  a21 /= a01;


thDB = slider1;

r = slider2;

vol = 1/exp( (thDB -thDB/r) / cAmpDB_);

//EQ
cf = slider4/srate; 
boost = slider5;
bw = slider6; 
outgain = 10^(slider7/20);
ca = tan($pi*(cf-0.25));
A = 10^(boost/20);

(boost < 6.0) && (boost > -6.0) ? (
  F = sqrt(A);
) : ( 
  A > 1 ? (
    F = A/sqrt(2);
  ) : (
    F = A*sqrt(2);
  );
);
T = tan(2*$pi*bw);
as2 = ca*ca;
as4 = as2*as2;
d = 2*as2*T;
sn = (1 + as4)*T;
cs = (1 - as4);
mag = sqrt(sn*sn + cs*cs);
d = mag;
delta = atan2(sn,cs);
asnd = asin(d);
theta = 0.5*($pi - asnd - delta);
tmp = 0.5*(asnd-delta);
tmp > 0 && tmp < theta ? (  
  theta = tmp;  
);
xfmbw = theta/(2*$pi);

C = 1/tan(2*$pi*xfmbw);
F2 = F*F;
tmp = A*A - F2;
abs(tmp) <= SPN ? (
  alphad = C;
) : (  
  alphad = sqrt(C*C*(F2-1)/tmp);  
);
alphan = A*alphad;
a2plus1 = 1 + as2;
ma2plus1 = 1 - as2;

a0 = a2plus1 + alphan*ma2plus1;
a1 = 4.0*ca;
a2 = a2plus1 - alphan*ma2plus1;
b0 = a2plus1 + alphad*ma2plus1;
b2 = a2plus1 - alphad*ma2plus1;

recipb0 = 1/b0;
a0 *= recipb0;
a1 *= recipb0;
a2 *= recipb0;
b1 = a1;
b2 *= recipb0;

b1 = -b1;
b2 = -b2;

@sample
  hpf != 0 ? (
  ospl0 = spl0;
  spl0 = b01 * spl0 + b11 * xl11 + b21 * xl21 - a11 * yl11 - a21 * yl21;
  xl21 = xl11;
  xl11 = ospl0;
  yl21 = yl11;
  yl11 = spl0;

  ospl1 = spl1;
  spl1 = b01 * spl1 + b11 * xr11 + b21 * xr21 - a11 * yr11 - a21 * yr21;
  xr21 = xr11;
  xr11 = ospl1;
  yr21 = yr11;
  yr11 = spl1;
  );

(db0 = log(abs(spl0))*cAmpDB_) > thDB ? spl0 = exp( (thDB + (db0 - thDB)/r) / cAmpDB_)* sign(spl0);
(db1 = log(abs(spl1))*cAmpDB_) > thDB ? spl1 = exp( (thDB + (db1 - thDB)/r) / cAmpDB_)* sign(spl1);
spl0 *= vol;
spl1 *= vol;



xl = (spl0+spl1)/2;
 
yl = a0*xl + a1*x1l + a2*x2l + b1*y1l + b2*y2l;
x2l = x1l;
x1l = xl;
y2l = y1l;
y1l = yl;

spl0=spl1=yl*outgain;

 




@gfx 300 200

        
     
  
      mouse_cap > 0 ? (
        mouseon == 0 ? (
          mouseclick = 1;
          mouse_cap == 2 ? val=1.0 : val = 1;
          
          (mouse_x>=32&&mouse_x<=103&&mouse_y>=95&&mouse_y<=161) ? (mouseon=1;mouseclick=1;);
          
          (mouse_x>=152&&mouse_x<=220&&mouse_y>=95&&mouse_y<=161) ? (mouseon=4;mouseclick=4;val=10;);
          
          (mouse_x>=268&&mouse_x<=335&&mouse_y>=95&&mouse_y<=161) ? (mouseon=7;mouseclick=7;);
          
           );
          
            mouseon == 7 ? (
              mouse_y < saveY ? slider7 = max(1,slider7-val);
              mouse_y > saveY ? slider7 = min(24,slider7+val);
              mouse_cap == 2 ? slider7 = 1;
              
              );
              
            mouseon == 4 ? (
              mouse_y < saveY ? slider4 = max(180,slider4-val);
              mouse_y > saveY ? slider4 = min(460,slider4+val);
              mouse_cap == 2 ? slider4 = 200;
      
           );
            mouseon == 1 ? (
              mouse_y < saveY ? slider1 = max(-12,slider1-val);
              mouse_y > saveY ? slider1 = min(-1,slider1+val);
              mouse_cap == 2 ? slider1 = -6;
              
      );
      
        saveX=mouse_X;
        saveY=mouse_y;
        
      
        thDB = slider1;
        
        r = slider2;
        
        vol = 1/exp( (thDB -thDB/r) / cAmpDB_);
        
    
    
    cf = slider4/srate; 
    boost = slider5;
    bw = slider6; // removed "/srate" here and added BW in proper ranges
    outgain = 10^(slider7/20);
    ca = tan($pi*(cf-0.25));
    A = 10^(boost/20);
    
    (boost < 6.0) && (boost > -6.0) ? (
      F = sqrt(A);
    ) : ( 
      A > 1 ? (
        F = A/sqrt(2);
      ) : (
        F = A*sqrt(2);
      );
    );
    T = tan(2*$pi*bw);
    as2 = ca*ca;
    as4 = as2*as2;
    d = 2*as2*T;
    sn = (1 + as4)*T;
    cs = (1 - as4);
    mag = sqrt(sn*sn + cs*cs);
    //"d /= mag" prevents adding any boost at all - replaced with d=mag;
    d = mag;
    delta = atan2(sn,cs);
    asnd = asin(d);
    theta = 0.5*($pi - asnd - delta);
    tmp = 0.5*(asnd-delta);
    tmp > 0 && tmp < theta ? (  
      theta = tmp;  
    );
    xfmbw = theta/(2*$pi);
    
    C = 1/tan(2*$pi*xfmbw);
    F2 = F*F;
    tmp = A*A - F2;
    abs(tmp) <= SPN ? (
      alphad = C;
    ) : (  
      alphad = sqrt(C*C*(F2-1)/tmp);  
    );
    alphan = A*alphad;
    a2plus1 = 1 + as2;
    ma2plus1 = 1 - as2;
    
    a0 = a2plus1 + alphan*ma2plus1;
    a1 = 4.0*ca;
    a2 = a2plus1 - alphan*ma2plus1;
    b0 = a2plus1 + alphad*ma2plus1;
    b2 = a2plus1 - alphad*ma2plus1;
    
    recipb0 = 1/b0;
    a0 *= recipb0;
    a1 *= recipb0;
    a2 *= recipb0;
    b1 = a1;
    b2 *= recipb0;
    
    b1 = -b1;
    b2 = -b2;
   
 
    
    ): (done=0;mouseon=0;);


    ///BackGround
    gfx_a=1;
    gfx_x=gfx_y=0;
    
      rotation_x_offset = 1; 
      rotation_y_offset = 1;   
      coordinatelist=1000000; 
     //posição da imagem de fundo
      coordinatelist[0]=0;
      coordinatelist[1]=0;
      coordinatelist[2]=300;
      coordinatelist[3]=179;
      coordinatelist[4]=0;
      coordinatelist[5]=0;
      coordinatelist[6]=380;
      coordinatelist[7]=200;
      coordinatelist[8]=0; 
      coordinatelist[9]=0; 
      gfx_blitext(0,coordinatelist,0);
      /////Background
      
      //Boost Amount
      coordinatelist[0]=-3;
      coordinatelist[1]=-3;
      coordinatelist[2]=131;
      coordinatelist[3]=131;
      coordinatelist[4]=35;
      coordinatelist[5]=93;
      coordinatelist[6]=70;
      coordinatelist[7]=70;
      coordinatelist[8]=0; 
      coordinatelist[9]=0; 
      gfx_blitext(1,coordinatelist,17.9+slider1/31*13.8);
     //High Pass
      coordinatelist[0]=-3;
      coordinatelist[1]=-3;
      coordinatelist[2]=131;
      coordinatelist[3]=131;
      coordinatelist[4]=148;
      coordinatelist[5]=93;
      coordinatelist[6]=70;
      coordinatelist[7]=70;
      coordinatelist[8]=0; 
      coordinatelist[9]=0;  
      gfx_blitext(1,coordinatelist,9.4+slider4/1300*23);
      /////Background
      
      //volume
      coordinatelist[0]=-3;
      coordinatelist[1]=-3;
      coordinatelist[2]=131;
      coordinatelist[3]=131;
      coordinatelist[4]=267;
      coordinatelist[5]=93;
      coordinatelist[6]=70;
      coordinatelist[7]=70;
      coordinatelist[8]=0; 
      coordinatelist[9]=0; 
      gfx_blitext(1,coordinatelist,18.7+slider7/31*6.5);
      /////Background
      



//display
gfx_clear=1;
  gfx_r=gfx_g=gfx_b=50;
  gfx_setfont(1,"Franklin Gothic Medium",18,'b');
  gfx_x=52;gfx_y=75;
  
   A = ("Boost ");
    gfx_drawstr (A);
    
    gfx_y=165;
    gfx_x=45;
     gfx_drawnumber(slider1,1);
     gfx_drawchar($'d');
     gfx_drawchar($'b');
     
     gfx_x=150;gfx_y=75;
     
      B = ("Frequency");
       gfx_drawstr (B);
       
       gfx_y=165;
       gfx_x=162;
        gfx_drawnumber(slider4,0);
        gfx_drawchar($'H');
        gfx_drawchar($'z');
        
        
        gfx_x=286;gfx_y=75;
        
         C = ("Gain");
          gfx_drawstr (C);
          
          gfx_y=165;
          gfx_x=286;
           gfx_drawnumber(slider7,0);
           gfx_drawchar($'d');
           gfx_drawchar($'b');
 
 gfx_r=0.9;
 gfx_g=0.1;
 gfx_b=0;
        gfx_x=140;gfx_y=41;
        
         D = ("Gil Fernandes");
          gfx_drawstr (D);
          
           gfx_a=1;
           //knobs aRC
           gfx_r=0.5;
           gfx_g=0.1;
           gfx_b=0;
      
          
          //Boost
          gfx_arc(70,128,25,15.5+slider1/31*13.8, 10.1);
          gfx_arc(70,128,26,15.5+slider1/31*13.8, 10.1);
          gfx_arc(70,128,27,15.5+slider1/31*13.8, 10.1);
          gfx_arc(70,128,28,15.5+slider1/31*13.8, 10.1);
          gfx_arc(70,128,29,15.5+slider1/31*13.8, 10.1);
          
          gfx_arc(70,128,25,15.5+slider1/31*13.8, 10.1);
          gfx_arc(70,128,26,15.5+slider1/31*13.8, 10.1);
          gfx_arc(70,128,27,15.5+slider1/31*13.8, 10.1);
          gfx_arc(70,128,28,15.5+slider1/31*13.8, 10.1);
          gfx_arc(70,128,29,15.5+slider1/31*13.8, 10.1);
          
        
          //Freq
         gfx_arc(183,128,25,7+slider4/1300*23, 10.1); 
         gfx_arc(183,128,26,7+slider4/1300*23, 10.1); 
         gfx_arc(183,128,27,7+slider4/1300*23, 10.1); 
         gfx_arc(183,128,28,7+slider4/1300*23, 10.1);
         gfx_arc(183,128,29,7+slider4/1300*23, 10.1);
         
         gfx_arc(183,128,25,7+slider4/1300*23, 10.1); 
                 gfx_arc(183,128,26,7+slider4/1300*23, 10.1); 
                 gfx_arc(183,128,27,7+slider4/1300*23, 10.1); 
                 gfx_arc(183,128,28,7+slider4/1300*23, 10.1); 
                 gfx_arc(183,128,29,7+slider4/1300*23, 10.1); 
                 
                 
                 //Gain
                 gfx_arc(302,128,25,10+slider7/31*6.5, 10.1);
                 gfx_arc(302,128,26,10+slider7/31*6.5, 10.1);
                 gfx_arc(302,128,27,10+slider7/31*6.5, 10.1);
                 gfx_arc(302,128,28,10+slider7/31*6.5, 10.1);
                 gfx_arc(302,128,29,10+slider7/31*6.5, 10.1);
                 
                 gfx_arc(302,128,25,10+slider7/31*6.5, 10.1);
                 gfx_arc(302,128,26,10+slider7/31*6.5, 10.1);
                 gfx_arc(302,128,27,10+slider7/31*6.5, 10.1);
                 gfx_arc(302,128,29,10+slider7/31*6.5, 10.1);
 
